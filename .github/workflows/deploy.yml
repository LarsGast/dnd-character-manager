name: Deploy site and create release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Name of the release without the tag. Results in "<tag> <release_name>" or "<tag>".'
        required: false
        type: string
      
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages and creating releases.
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "release"
  cancel-in-progress: true

jobs:

  # Only allow deployment from a semver tag
  check-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check if ref is a semver tag
        id: check_tag
        run: |
          if [[ "${GITHUB_REF}" =~ ^refs/tags/v?[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Semver tag detected: ${GITHUB_REF}"
          else
            echo "This workflow can only be run from a semver tag (e.g., v1.2.3 or 1.2.3)."
            exit 1
          fi

  build:
    runs-on: ubuntu-latest
    needs: check-tag
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        # https://github.com/ruby/setup-ruby/releases/tag/v1.207.0
        uses: ruby/setup-ruby@4a9ddd6f338a97768b8006bf671dfbad383215f4
        with:
          ruby-version: '3.1' # Not needed with a .ruby-version file
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}"
        env:
          JEKYLL_ENV: production
      - name: Upload artifact
        # Automatically uploads an artifact from the './_site' directory by default
        uses: actions/upload-pages-artifact@v3

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
  
  create-release:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.event.inputs.release_name && format('{0} {1}', github.ref_name, github.event.inputs.release_name) || github.ref_name }}
          discussionCategory: "Releases"
          generateReleaseNotes: true
